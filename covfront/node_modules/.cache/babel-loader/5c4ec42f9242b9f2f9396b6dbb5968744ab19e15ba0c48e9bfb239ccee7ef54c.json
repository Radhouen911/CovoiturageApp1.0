{"ast":null,"code":"import axios from \"axios\";\nconst api = axios.create({\n  baseURL: \"http://localhost:8000\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\"\n  }\n});\n\n// Add request interceptor for logging\napi.interceptors.request.use(config => {\n  console.log(\"API Request Details:\", {\n    url: config.url,\n    method: config.method.toUpperCase(),\n    headers: config.headers,\n    data: config.data\n  });\n  return config;\n}, error => {\n  console.error(\"API Request Error:\", error);\n  return Promise.reject(error);\n});\n\n// Add response interceptor for logging\napi.interceptors.response.use(response => {\n  console.log(\"API Response Details:\", {\n    url: response.config.url,\n    status: response.status,\n    data: response.data\n  });\n  return response;\n}, error => {\n  var _error$config, _error$config2, _error$response, _error$response2;\n  console.error(\"API Response Error:\", {\n    url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url,\n    method: (_error$config2 = error.config) === null || _error$config2 === void 0 ? void 0 : _error$config2.method.toUpperCase(),\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    data: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data,\n    message: error.message\n  });\n  return Promise.reject(error);\n});\nclass ApiService {\n  async login(credentials) {\n    console.log(\"Attempting login with credentials:\", credentials);\n    try {\n      const response = await api.post(\"/api/login\", credentials);\n      if (response.data.token) {\n        console.log(\"Token received:\", response.data.token);\n        localStorage.setItem(\"token\", response.data.token);\n        api.defaults.headers.common[\"Authorization\"] = `Bearer ${response.data.token}`;\n      }\n      return response.data;\n    } catch (error) {\n      var _error$response3;\n      console.error(\"Login failed:\", ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error.message);\n      throw error;\n    }\n  }\n}\nexport default new ApiService();","map":{"version":3,"names":["axios","api","create","baseURL","headers","Accept","interceptors","request","use","config","console","log","url","method","toUpperCase","data","error","Promise","reject","response","status","_error$config","_error$config2","_error$response","_error$response2","message","ApiService","login","credentials","post","token","localStorage","setItem","defaults","common","_error$response3"],"sources":["D:/CovoiturageWeb/covfront/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"http://localhost:8000\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n});\n\n// Add request interceptor for logging\napi.interceptors.request.use(\n  (config) => {\n    console.log(\"API Request Details:\", {\n      url: config.url,\n      method: config.method.toUpperCase(),\n      headers: config.headers,\n      data: config.data,\n    });\n    return config;\n  },\n  (error) => {\n    console.error(\"API Request Error:\", error);\n    return Promise.reject(error);\n  }\n);\n\n// Add response interceptor for logging\napi.interceptors.response.use(\n  (response) => {\n    console.log(\"API Response Details:\", {\n      url: response.config.url,\n      status: response.status,\n      data: response.data,\n    });\n    return response;\n  },\n  (error) => {\n    console.error(\"API Response Error:\", {\n      url: error.config?.url,\n      method: error.config?.method.toUpperCase(),\n      status: error.response?.status,\n      data: error.response?.data,\n      message: error.message,\n    });\n    return Promise.reject(error);\n  }\n);\n\nclass ApiService {\n  async login(credentials) {\n    console.log(\"Attempting login with credentials:\", credentials);\n    try {\n      const response = await api.post(\"/api/login\", credentials);\n      if (response.data.token) {\n        console.log(\"Token received:\", response.data.token);\n        localStorage.setItem(\"token\", response.data.token);\n        api.defaults.headers.common[\n          \"Authorization\"\n        ] = `Bearer ${response.data.token}`;\n      }\n      return response.data;\n    } catch (error) {\n      console.error(\"Login failed:\", error.response?.data || error.message);\n      throw error;\n    }\n  }\n}\n\nexport default new ApiService();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}