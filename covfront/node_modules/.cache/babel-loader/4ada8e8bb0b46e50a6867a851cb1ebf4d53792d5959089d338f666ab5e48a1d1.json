{"ast":null,"code":"var _jsxFileName = \"D:\\\\CovoiturageWeb\\\\covfront\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport ApiService from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n  const checkAuthStatus = () => {\n    const token = localStorage.getItem(\"token\");\n    const userData = localStorage.getItem(\"user\");\n    if (token && userData) {\n      setIsLoggedIn(true);\n      setUser(JSON.parse(userData));\n    } else {\n      setIsLoggedIn(false);\n      setUser(null);\n    }\n    setLoading(false);\n  };\n  const login = async credentials => {\n    try {\n      const response = await ApiService.login(credentials);\n      if (response.success) {\n        setIsLoggedIn(true);\n        setUser(response.data.user);\n        return response;\n      }\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await ApiService.register(userData);\n      if (response.success) {\n        setIsLoggedIn(true);\n        setUser(response.data.user);\n        return response;\n      }\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      await ApiService.logout();\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n    } finally {\n      setIsLoggedIn(false);\n      setUser(null);\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"user\");\n    }\n  };\n  const value = {\n    isLoggedIn,\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    checkAuthStatus\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"yZDfVBHkRvzBQbg89I5SngvUWfc=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useState","ApiService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","isLoggedIn","setIsLoggedIn","user","setUser","loading","setLoading","checkAuthStatus","token","localStorage","getItem","userData","JSON","parse","login","credentials","response","success","data","error","register","logout","console","removeItem","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/CovoiturageWeb/covfront/src/contexts/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from \"react\";\nimport ApiService from \"../services/api\";\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n\n  const checkAuthStatus = () => {\n    const token = localStorage.getItem(\"token\");\n    const userData = localStorage.getItem(\"user\");\n\n    if (token && userData) {\n      setIsLoggedIn(true);\n      setUser(JSON.parse(userData));\n    } else {\n      setIsLoggedIn(false);\n      setUser(null);\n    }\n    setLoading(false);\n  };\n\n  const login = async (credentials) => {\n    try {\n      const response = await ApiService.login(credentials);\n      if (response.success) {\n        setIsLoggedIn(true);\n        setUser(response.data.user);\n        return response;\n      }\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      const response = await ApiService.register(userData);\n      if (response.success) {\n        setIsLoggedIn(true);\n        setUser(response.data.user);\n        return response;\n      }\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await ApiService.logout();\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n    } finally {\n      setIsLoggedIn(false);\n      setUser(null);\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"user\");\n    }\n  };\n\n  const value = {\n    isLoggedIn,\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    checkAuthStatus,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}