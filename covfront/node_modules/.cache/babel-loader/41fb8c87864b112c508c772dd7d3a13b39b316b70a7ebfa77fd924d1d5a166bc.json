{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\CovoiturageWeb\\\\covfront\\\\src\\\\components\\\\NotificationBell.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport ApiService from \"../services/api\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NotificationBell = () => {\n  _s();\n  const {\n    isLoggedIn\n  } = useAuth();\n  const [notifications, setNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    if (isLoggedIn) {\n      loadNotifications();\n      loadUnreadCount();\n\n      // Poll for new notifications every 30 seconds\n      const interval = setInterval(() => {\n        loadUnreadCount();\n      }, 30000);\n      return () => clearInterval(interval);\n    }\n  }, [isLoggedIn]);\n  const loadNotifications = async () => {\n    try {\n      setLoading(true);\n      const response = await ApiService.getNotifications();\n      if (response.success) {\n        setNotifications(response.data.slice(0, 10)); // Show only latest 10\n      }\n    } catch (error) {\n      console.error(\"Error loading notifications:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const loadUnreadCount = async () => {\n    try {\n      const response = await ApiService.getUnreadNotificationsCount();\n      if (response.success) {\n        setUnreadCount(response.data.count);\n      }\n    } catch (error) {\n      console.error(\"Error loading unread count:\", error);\n    }\n  };\n  const handleNotificationClick = async notification => {\n    if (!notification.read_at) {\n      try {\n        await ApiService.markNotificationAsRead(notification.id);\n        setNotifications(prev => prev.map(n => n.id === notification.id ? {\n          ...n,\n          read_at: new Date().toISOString()\n        } : n));\n        setUnreadCount(prev => Math.max(0, prev - 1));\n      } catch (error) {\n        console.error(\"Error marking notification as read:\", error);\n      }\n    }\n\n    // Handle navigation based on notification type\n    handleNotificationNavigation(notification);\n    setShowDropdown(false);\n  };\n  const handleNotificationNavigation = notification => {\n    switch (notification.type) {\n      case \"booking_request\":\n        window.location.href = \"/profilePage?tab=bookings\";\n        break;\n      case \"booking_accepted\":\n      case \"booking_rejected\":\n        window.location.href = \"/profilePage?tab=my-bookings\";\n        break;\n      case \"new_message\":\n        window.location.href = \"/messages\";\n        break;\n      default:\n        break;\n    }\n  };\n  const markAllAsRead = async () => {\n    try {\n      await ApiService.markAllNotificationsAsRead();\n      setNotifications(prev => prev.map(n => ({\n        ...n,\n        read_at: new Date().toISOString()\n      })));\n      setUnreadCount(0);\n    } catch (error) {\n      console.error(\"Error marking all as read:\", error);\n    }\n  };\n  const getNotificationIcon = type => {\n    switch (type) {\n      case \"booking_request\":\n        return \"fas fa-user-plus text-primary\";\n      case \"booking_accepted\":\n        return \"fas fa-check-circle text-success\";\n      case \"booking_rejected\":\n        return \"fas fa-times-circle text-danger\";\n      case \"new_message\":\n        return \"fas fa-comment text-info\";\n      default:\n        return \"fas fa-bell text-secondary\";\n    }\n  };\n  const formatNotificationTime = timestamp => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diffInMinutes = Math.floor((now - date) / (1000 * 60));\n    if (diffInMinutes < 1) return \"Ã€ l'instant\";\n    if (diffInMinutes < 60) return `Il y a ${diffInMinutes}min`;\n    if (diffInMinutes < 1440) return `Il y a ${Math.floor(diffInMinutes / 60)}h`;\n    return `Il y a ${Math.floor(diffInMinutes / 1440)}j`;\n  };\n  if (!isLoggedIn) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"position-relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .notification-bell {\n          position: relative;\n          cursor: pointer;\n          padding: 8px;\n          border-radius: 50%;\n          transition: background-color 0.2s ease;\n        }\n        .notification-bell:hover {\n          background-color: #f8f9fa;\n        }\n        .notification-badge {\n          position: absolute;\n          top: -2px;\n          right: -2px;\n          background: #dc3545;\n          color: white;\n          border-radius: 50%;\n          width: 18px;\n          height: 18px;\n          font-size: 10px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          font-weight: bold;\n        }\n        .notification-dropdown {\n          position: absolute;\n          top: 100%;\n          right: 0;\n          background: white;\n          border: 1px solid #dee2e6;\n          border-radius: 8px;\n          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n          width: 350px;\n          max-height: 400px;\n          overflow-y: auto;\n          z-index: 1000;\n        }\n        .notification-item {\n          padding: 12px 16px;\n          border-bottom: 1px solid #f8f9fa;\n          cursor: pointer;\n          transition: background-color 0.2s ease;\n        }\n        .notification-item:hover {\n          background-color: #f8f9fa;\n        }\n        .notification-item.unread {\n          background-color: #e7f3ff;\n          border-left: 3px solid #007bff;\n        }\n        .notification-header {\n          padding: 12px 16px;\n          border-bottom: 2px solid #f8f9fa;\n          background-color: #f8f9fa;\n          font-weight: bold;\n        }\n        .notification-footer {\n          padding: 8px 16px;\n          text-align: center;\n          border-top: 1px solid #f8f9fa;\n          background-color: #f8f9fa;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-bell\",\n      onClick: () => {\n        setShowDropdown(!showDropdown);\n        if (!showDropdown) {\n          loadNotifications();\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-bell fa-lg text-gray-600\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"notification-badge\",\n        children: unreadCount > 99 ? \"99+\" : unreadCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), showDropdown && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"position-fixed w-100 h-100\",\n        style: {\n          top: 0,\n          left: 0,\n          zIndex: 999\n        },\n        onClick: () => setShowDropdown(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-header d-flex justify-content-between align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), unreadCount > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-sm btn-link p-0 text-primary\",\n            onClick: markAllAsRead,\n            children: \"Tout marquer comme lu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center py-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner-border spinner-border-sm\",\n            role: \"status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 15\n        }, this) : notifications.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center py-4 text-muted\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-bell-slash fa-2x mb-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-0\",\n            children: \"Aucune notification\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 15\n        }, this) : notifications.map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `notification-item ${!notification.read_at ? \"unread\" : \"\"}`,\n          onClick: () => handleNotificationClick(notification),\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex align-items-start\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"me-3\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: getNotificationIcon(notification.type)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex-grow-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"fw-medium mb-1\",\n                children: notification.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-muted small mb-1\",\n                children: notification.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-muted\",\n                style: {\n                  fontSize: \"0.75rem\"\n                },\n                children: formatNotificationTime(notification.created_at)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 21\n            }, this), !notification.read_at && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ms-2\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-primary rounded-circle\",\n                style: {\n                  width: \"8px\",\n                  height: \"8px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 19\n          }, this)\n        }, notification.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 17\n        }, this)), notifications.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-footer\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/notifications\",\n            className: \"btn btn-sm btn-link\",\n            children: \"Voir toutes les notifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(NotificationBell, \"XPkFoMjjouf1JI/RtlJfzEJVDVg=\", false, function () {\n  return [useAuth];\n});\n_c = NotificationBell;\nexport default NotificationBell;\nvar _c;\n$RefreshReg$(_c, \"NotificationBell\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","useEffect","useState","useAuth","ApiService","jsxDEV","_jsxDEV","Fragment","_Fragment","NotificationBell","isLoggedIn","notifications","setNotifications","unreadCount","setUnreadCount","showDropdown","setShowDropdown","loading","setLoading","loadNotifications","loadUnreadCount","interval","setInterval","clearInterval","response","getNotifications","success","data","slice","error","console","getUnreadNotificationsCount","count","handleNotificationClick","notification","read_at","markNotificationAsRead","id","prev","map","n","Date","toISOString","Math","max","handleNotificationNavigation","type","window","location","href","markAllAsRead","markAllNotificationsAsRead","getNotificationIcon","formatNotificationTime","timestamp","date","now","diffInMinutes","floor","className","children","jsx","fileName","lineNumber","columnNumber","onClick","style","top","left","zIndex","role","length","title","message","fontSize","created_at","width","height","_c","$RefreshReg$"],"sources":["D:/CovoiturageWeb/covfront/src/components/NotificationBell.js"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport ApiService from \"../services/api\";\n\nconst NotificationBell = () => {\n  const { isLoggedIn } = useAuth();\n  const [notifications, setNotifications] = useState([]);\n  const [unreadCount, setUnreadCount] = useState(0);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      loadNotifications();\n      loadUnreadCount();\n\n      // Poll for new notifications every 30 seconds\n      const interval = setInterval(() => {\n        loadUnreadCount();\n      }, 30000);\n\n      return () => clearInterval(interval);\n    }\n  }, [isLoggedIn]);\n\n  const loadNotifications = async () => {\n    try {\n      setLoading(true);\n      const response = await ApiService.getNotifications();\n      if (response.success) {\n        setNotifications(response.data.slice(0, 10)); // Show only latest 10\n      }\n    } catch (error) {\n      console.error(\"Error loading notifications:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadUnreadCount = async () => {\n    try {\n      const response = await ApiService.getUnreadNotificationsCount();\n      if (response.success) {\n        setUnreadCount(response.data.count);\n      }\n    } catch (error) {\n      console.error(\"Error loading unread count:\", error);\n    }\n  };\n\n  const handleNotificationClick = async (notification) => {\n    if (!notification.read_at) {\n      try {\n        await ApiService.markNotificationAsRead(notification.id);\n        setNotifications((prev) =>\n          prev.map((n) =>\n            n.id === notification.id\n              ? { ...n, read_at: new Date().toISOString() }\n              : n\n          )\n        );\n        setUnreadCount((prev) => Math.max(0, prev - 1));\n      } catch (error) {\n        console.error(\"Error marking notification as read:\", error);\n      }\n    }\n\n    // Handle navigation based on notification type\n    handleNotificationNavigation(notification);\n    setShowDropdown(false);\n  };\n\n  const handleNotificationNavigation = (notification) => {\n    switch (notification.type) {\n      case \"booking_request\":\n        window.location.href = \"/profilePage?tab=bookings\";\n        break;\n      case \"booking_accepted\":\n      case \"booking_rejected\":\n        window.location.href = \"/profilePage?tab=my-bookings\";\n        break;\n      case \"new_message\":\n        window.location.href = \"/messages\";\n        break;\n      default:\n        break;\n    }\n  };\n\n  const markAllAsRead = async () => {\n    try {\n      await ApiService.markAllNotificationsAsRead();\n      setNotifications((prev) =>\n        prev.map((n) => ({ ...n, read_at: new Date().toISOString() }))\n      );\n      setUnreadCount(0);\n    } catch (error) {\n      console.error(\"Error marking all as read:\", error);\n    }\n  };\n\n  const getNotificationIcon = (type) => {\n    switch (type) {\n      case \"booking_request\":\n        return \"fas fa-user-plus text-primary\";\n      case \"booking_accepted\":\n        return \"fas fa-check-circle text-success\";\n      case \"booking_rejected\":\n        return \"fas fa-times-circle text-danger\";\n      case \"new_message\":\n        return \"fas fa-comment text-info\";\n      default:\n        return \"fas fa-bell text-secondary\";\n    }\n  };\n\n  const formatNotificationTime = (timestamp) => {\n    const date = new Date(timestamp);\n    const now = new Date();\n    const diffInMinutes = Math.floor((now - date) / (1000 * 60));\n\n    if (diffInMinutes < 1) return \"Ã€ l'instant\";\n    if (diffInMinutes < 60) return `Il y a ${diffInMinutes}min`;\n    if (diffInMinutes < 1440)\n      return `Il y a ${Math.floor(diffInMinutes / 60)}h`;\n    return `Il y a ${Math.floor(diffInMinutes / 1440)}j`;\n  };\n\n  if (!isLoggedIn) return null;\n\n  return (\n    <div className=\"position-relative\">\n      <style jsx>{`\n        .notification-bell {\n          position: relative;\n          cursor: pointer;\n          padding: 8px;\n          border-radius: 50%;\n          transition: background-color 0.2s ease;\n        }\n        .notification-bell:hover {\n          background-color: #f8f9fa;\n        }\n        .notification-badge {\n          position: absolute;\n          top: -2px;\n          right: -2px;\n          background: #dc3545;\n          color: white;\n          border-radius: 50%;\n          width: 18px;\n          height: 18px;\n          font-size: 10px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          font-weight: bold;\n        }\n        .notification-dropdown {\n          position: absolute;\n          top: 100%;\n          right: 0;\n          background: white;\n          border: 1px solid #dee2e6;\n          border-radius: 8px;\n          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n          width: 350px;\n          max-height: 400px;\n          overflow-y: auto;\n          z-index: 1000;\n        }\n        .notification-item {\n          padding: 12px 16px;\n          border-bottom: 1px solid #f8f9fa;\n          cursor: pointer;\n          transition: background-color 0.2s ease;\n        }\n        .notification-item:hover {\n          background-color: #f8f9fa;\n        }\n        .notification-item.unread {\n          background-color: #e7f3ff;\n          border-left: 3px solid #007bff;\n        }\n        .notification-header {\n          padding: 12px 16px;\n          border-bottom: 2px solid #f8f9fa;\n          background-color: #f8f9fa;\n          font-weight: bold;\n        }\n        .notification-footer {\n          padding: 8px 16px;\n          text-align: center;\n          border-top: 1px solid #f8f9fa;\n          background-color: #f8f9fa;\n        }\n      `}</style>\n\n      <div\n        className=\"notification-bell\"\n        onClick={() => {\n          setShowDropdown(!showDropdown);\n          if (!showDropdown) {\n            loadNotifications();\n          }\n        }}\n      >\n        <i className=\"fas fa-bell fa-lg text-gray-600\"></i>\n        {unreadCount > 0 && (\n          <span className=\"notification-badge\">\n            {unreadCount > 99 ? \"99+\" : unreadCount}\n          </span>\n        )}\n      </div>\n\n      {showDropdown && (\n        <>\n          <div\n            className=\"position-fixed w-100 h-100\"\n            style={{ top: 0, left: 0, zIndex: 999 }}\n            onClick={() => setShowDropdown(false)}\n          ></div>\n\n          <div className=\"notification-dropdown\">\n            <div className=\"notification-header d-flex justify-content-between align-items-center\">\n              <span>Notifications</span>\n              {unreadCount > 0 && (\n                <button\n                  className=\"btn btn-sm btn-link p-0 text-primary\"\n                  onClick={markAllAsRead}\n                >\n                  Tout marquer comme lu\n                </button>\n              )}\n            </div>\n\n            {loading ? (\n              <div className=\"text-center py-4\">\n                <div\n                  className=\"spinner-border spinner-border-sm\"\n                  role=\"status\"\n                ></div>\n              </div>\n            ) : notifications.length === 0 ? (\n              <div className=\"text-center py-4 text-muted\">\n                <i className=\"fas fa-bell-slash fa-2x mb-2\"></i>\n                <p className=\"mb-0\">Aucune notification</p>\n              </div>\n            ) : (\n              notifications.map((notification) => (\n                <div\n                  key={notification.id}\n                  className={`notification-item ${\n                    !notification.read_at ? \"unread\" : \"\"\n                  }`}\n                  onClick={() => handleNotificationClick(notification)}\n                >\n                  <div className=\"d-flex align-items-start\">\n                    <div className=\"me-3\">\n                      <i className={getNotificationIcon(notification.type)}></i>\n                    </div>\n                    <div className=\"flex-grow-1\">\n                      <div className=\"fw-medium mb-1\">{notification.title}</div>\n                      <div className=\"text-muted small mb-1\">\n                        {notification.message}\n                      </div>\n                      <div\n                        className=\"text-muted\"\n                        style={{ fontSize: \"0.75rem\" }}\n                      >\n                        {formatNotificationTime(notification.created_at)}\n                      </div>\n                    </div>\n                    {!notification.read_at && (\n                      <div className=\"ms-2\">\n                        <div\n                          className=\"bg-primary rounded-circle\"\n                          style={{ width: \"8px\", height: \"8px\" }}\n                        ></div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              ))\n            )}\n\n            {notifications.length > 0 && (\n              <div className=\"notification-footer\">\n                <a href=\"/notifications\" className=\"btn btn-sm btn-link\">\n                  Voir toutes les notifications\n                </a>\n              </div>\n            )}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default NotificationBell;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}