{"ast":null,"code":"const url = `${API_BASE_URL}${endpoint}`; // => \"http://localhost:8000/api/login\"\n\nclass ApiService {\n  constructor() {\n    this.token = localStorage.getItem(\"auth_token\");\n  }\n  async request(endpoint, options = {}) {\n    const url = `${API_BASE_URL}${endpoint}`;\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        ...options.headers\n      },\n      ...options\n    };\n    if (this.token) {\n      config.headers.Authorization = `Bearer ${this.token}`;\n    }\n    try {\n      const response = await fetch(url, config);\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.message || \"Something went wrong\");\n      }\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Auth methods\n  async register(userData) {\n    const response = await this.request(\"/register\", {\n      method: \"POST\",\n      body: JSON.stringify(userData)\n    });\n    if (response.success) {\n      this.token = response.data.token;\n      localStorage.setItem(\"auth_token\", this.token);\n      localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n    }\n    return response;\n  }\n  async login(credentials) {\n    const response = await this.request(\"/login\", {\n      method: \"POST\",\n      body: JSON.stringify(credentials)\n    });\n    if (response.success) {\n      this.token = response.data.token;\n      localStorage.setItem(\"auth_token\", this.token);\n      localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n    }\n    return response;\n  }\n  async logout() {\n    await this.request(\"/logout\", {\n      method: \"POST\"\n    });\n    this.token = null;\n    localStorage.removeItem(\"auth_token\");\n    localStorage.removeItem(\"user\");\n  }\n\n  // Ride methods\n  async searchRides(params) {\n    const queryString = new URLSearchParams(params).toString();\n    return await this.request(`/rides?${queryString}`);\n  }\n  async createRide(rideData) {\n    return await this.request(\"/rides\", {\n      method: \"POST\",\n      body: JSON.stringify(rideData)\n    });\n  }\n  async getMyRides() {\n    return await this.request(\"/my-rides\");\n  }\n\n  // Booking methods\n  async bookRide(bookingData) {\n    return await this.request(\"/bookings\", {\n      method: \"POST\",\n      body: JSON.stringify(bookingData)\n    });\n  }\n  async getMyBookings() {\n    return await this.request(\"/bookings\");\n  }\n}\nexport default new ApiService();","map":{"version":3,"names":["url","API_BASE_URL","endpoint","ApiService","constructor","token","localStorage","getItem","request","options","config","headers","Accept","Authorization","response","fetch","data","json","ok","Error","message","error","register","userData","method","body","JSON","stringify","success","setItem","user","login","credentials","logout","removeItem","searchRides","params","queryString","URLSearchParams","toString","createRide","rideData","getMyRides","bookRide","bookingData","getMyBookings"],"sources":["D:/CovoiturageWeb/covfront/src/services/api.js"],"sourcesContent":["const url = `${API_BASE_URL}${endpoint}`; // => \"http://localhost:8000/api/login\"\n\nclass ApiService {\n  constructor() {\n    this.token = localStorage.getItem(\"auth_token\");\n  }\n\n  async request(endpoint, options = {}) {\n    const url = `${API_BASE_URL}${endpoint}`;\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        ...options.headers,\n      },\n      ...options,\n    };\n\n    if (this.token) {\n      config.headers.Authorization = `Bearer ${this.token}`;\n    }\n\n    try {\n      const response = await fetch(url, config);\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message || \"Something went wrong\");\n      }\n\n      return data;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  // Auth methods\n  async register(userData) {\n    const response = await this.request(\"/register\", {\n      method: \"POST\",\n      body: JSON.stringify(userData),\n    });\n\n    if (response.success) {\n      this.token = response.data.token;\n      localStorage.setItem(\"auth_token\", this.token);\n      localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n    }\n\n    return response;\n  }\n\n  async login(credentials) {\n    const response = await this.request(\"/login\", {\n      method: \"POST\",\n      body: JSON.stringify(credentials),\n    });\n\n    if (response.success) {\n      this.token = response.data.token;\n      localStorage.setItem(\"auth_token\", this.token);\n      localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n    }\n\n    return response;\n  }\n\n  async logout() {\n    await this.request(\"/logout\", { method: \"POST\" });\n    this.token = null;\n    localStorage.removeItem(\"auth_token\");\n    localStorage.removeItem(\"user\");\n  }\n\n  // Ride methods\n  async searchRides(params) {\n    const queryString = new URLSearchParams(params).toString();\n    return await this.request(`/rides?${queryString}`);\n  }\n\n  async createRide(rideData) {\n    return await this.request(\"/rides\", {\n      method: \"POST\",\n      body: JSON.stringify(rideData),\n    });\n  }\n\n  async getMyRides() {\n    return await this.request(\"/my-rides\");\n  }\n\n  // Booking methods\n  async bookRide(bookingData) {\n    return await this.request(\"/bookings\", {\n      method: \"POST\",\n      body: JSON.stringify(bookingData),\n    });\n  }\n\n  async getMyBookings() {\n    return await this.request(\"/bookings\");\n  }\n}\n\nexport default new ApiService();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}