{"ast":null,"code":"// api.js\nimport axios from \"axios\";\nconst API_BASE_URL = \"http://localhost:8000\"; // no /api here if login/logout is outside /api\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  withCredentials: true,\n  // Include cookies\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\"\n  }\n});\nclass ApiService {\n  constructor() {\n    this.user = JSON.parse(localStorage.getItem(\"user\")) || null;\n  }\n  async getCsrfCookie() {\n    await api.get(\"/sanctum/csrf-cookie\");\n  }\n  async login(credentials) {\n    await this.getCsrfCookie();\n    const response = await api.post(\"/login\", credentials);\n    localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n    this.user = response.data.user;\n    return response.data;\n  }\n  async logout() {\n    await api.post(\"/logout\");\n    localStorage.removeItem(\"user\");\n    this.user = null;\n  }\n  async getMyRides() {\n    const response = await api.get(\"/api/my-rides\");\n    return response.data;\n  }\n  async bookRide(data) {\n    const response = await api.post(\"/api/bookings\", data);\n    return response.data;\n  }\n}\nexport default new ApiService();","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","withCredentials","headers","Accept","ApiService","constructor","user","JSON","parse","localStorage","getItem","getCsrfCookie","get","login","credentials","response","post","setItem","stringify","data","logout","removeItem","getMyRides","bookRide"],"sources":["D:/CovoiturageWeb/covfront/src/services/api.js"],"sourcesContent":["// api.js\nimport axios from \"axios\";\n\nconst API_BASE_URL = \"http://localhost:8000\"; // no /api here if login/logout is outside /api\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  withCredentials: true, // Include cookies\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n  },\n});\n\nclass ApiService {\n  constructor() {\n    this.user = JSON.parse(localStorage.getItem(\"user\")) || null;\n  }\n\n  async getCsrfCookie() {\n    await api.get(\"/sanctum/csrf-cookie\");\n  }\n\n  async login(credentials) {\n    await this.getCsrfCookie();\n    const response = await api.post(\"/login\", credentials);\n    localStorage.setItem(\"user\", JSON.stringify(response.data.user));\n    this.user = response.data.user;\n    return response.data;\n  }\n\n  async logout() {\n    await api.post(\"/logout\");\n    localStorage.removeItem(\"user\");\n    this.user = null;\n  }\n\n  async getMyRides() {\n    const response = await api.get(\"/api/my-rides\");\n    return response.data;\n  }\n\n  async bookRide(data) {\n    const response = await api.post(\"/api/bookings\", data);\n    return response.data;\n  }\n}\n\nexport default new ApiService();\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,uBAAuB,CAAC,CAAC;;AAE9C,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,YAAY;EACrBI,eAAe,EAAE,IAAI;EAAE;EACvBC,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB;IAClCC,MAAM,EAAE;EACV;AACF,CAAC,CAAC;AAEF,MAAMC,UAAU,CAAC;EACfC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,IAAI;EAC9D;EAEA,MAAMC,aAAaA,CAAA,EAAG;IACpB,MAAMb,GAAG,CAACc,GAAG,CAAC,sBAAsB,CAAC;EACvC;EAEA,MAAMC,KAAKA,CAACC,WAAW,EAAE;IACvB,MAAM,IAAI,CAACH,aAAa,CAAC,CAAC;IAC1B,MAAMI,QAAQ,GAAG,MAAMjB,GAAG,CAACkB,IAAI,CAAC,QAAQ,EAAEF,WAAW,CAAC;IACtDL,YAAY,CAACQ,OAAO,CAAC,MAAM,EAAEV,IAAI,CAACW,SAAS,CAACH,QAAQ,CAACI,IAAI,CAACb,IAAI,CAAC,CAAC;IAChE,IAAI,CAACA,IAAI,GAAGS,QAAQ,CAACI,IAAI,CAACb,IAAI;IAC9B,OAAOS,QAAQ,CAACI,IAAI;EACtB;EAEA,MAAMC,MAAMA,CAAA,EAAG;IACb,MAAMtB,GAAG,CAACkB,IAAI,CAAC,SAAS,CAAC;IACzBP,YAAY,CAACY,UAAU,CAAC,MAAM,CAAC;IAC/B,IAAI,CAACf,IAAI,GAAG,IAAI;EAClB;EAEA,MAAMgB,UAAUA,CAAA,EAAG;IACjB,MAAMP,QAAQ,GAAG,MAAMjB,GAAG,CAACc,GAAG,CAAC,eAAe,CAAC;IAC/C,OAAOG,QAAQ,CAACI,IAAI;EACtB;EAEA,MAAMI,QAAQA,CAACJ,IAAI,EAAE;IACnB,MAAMJ,QAAQ,GAAG,MAAMjB,GAAG,CAACkB,IAAI,CAAC,eAAe,EAAEG,IAAI,CAAC;IACtD,OAAOJ,QAAQ,CAACI,IAAI;EACtB;AACF;AAEA,eAAe,IAAIf,UAAU,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}